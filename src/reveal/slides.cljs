(ns reveal.slides)


(def ^:private argument
  [:div.argument
   [:i.mr.statement.fas.fa-circle {:data-id "premise"}]
   [:i.mr.pro.fas.fa-long-arrow-alt-right {:data-id "relation"}]
   [:i.statement.fas.fa-circle {:data-id "conclusion"}]])

(def slide-auto-animate
  [:section
   [:section {:data-auto-animate "data-auto-animate"}
    [:h2 "Auto Animate"]
    [:p "Automatically animate CSS / SVGs on a slide"
     [:small "Press " [:code "space"] " for next animation step"]]
    (last argument)]
   [:section {:data-auto-animate "data-auto-animate"}
    argument]
   [:section {:data-auto-animate "data-auto-animate"}
    [:i.statement.fas.fa-circle {:data-id "conclusion"}]
    [:div.row
     [:div.offset-4.col-2
      [:i.relation.pro.fas.fa-long-arrow-alt-right {:data-id "relation" :data-fa-transform "rotate--40"}]]
     [:div.col-2
      [:i.relation.con.fas.fa-long-arrow-alt-left {:data-id "relation-con" :data-fa-transform "rotate-40"}]]]
    [:div.row
     [:div.offset-3.col-2
      [:i.statement.fas.fa-circle {:data-id "premise"}]]
     [:div.offset-2.col-2
      [:i.statement.fas.fa-circle {:data-id "premise-con"}]]]]
   [:section {:data-auto-animate "data-auto-animate"}
    [:div.row
     [:div.col-12
      [:i.issue.fas.fa-circle {:data-id "issue"}]]]
    [:div.row
     [:div.col-12
      [:i.relation.issue.fas.fa-long-arrow-alt-up {:data-id "relation-position"}]]]
    [:div.row
     [:div.col-12
      [:i.statement.fas.fa-circle {:data-id "conclusion"}]]]
    [:div.row
     [:div.offset-4.col-2
      [:i.relation.pro.fas.fa-long-arrow-alt-right {:data-id "relation" :data-fa-transform "rotate--40"}]]
     [:div.col-2
      [:i.relation.con.fas.fa-long-arrow-alt-left {:data-id "relation-con" :data-fa-transform "rotate-40"}]]]
    [:div.row
     [:div.offset-3.col-2
      [:i.statement.fas.fa-circle {:data-id "premise"}]]
     [:div.offset-2.col-2
      [:i.statement.fas.fa-circle {:data-id "premise-con"}]]]]])


;; -----------------------------------------------------------------------------

(def title-slide
  [:section
   [:h2 "Developers aren't paid to code"]
   [:div
    [:img.intro {:src "img/human_robot_collaboration.png"
                 :width "768" :height "384"}]]
   [:p "Wesley Matson - Clojure Conj 2024"]
   [:aside.notes "Introduce yourself, note that all the images, and 80% of the slides are AI generated"]])

(def golden-age-slide
  [:section
   [:h2 "The Golden Age of Engineering"]
   [:div.timeline
    [:div.timeline-item
     [:div.year "1950s"]
     [:div.description "Manual memory management"]]
    [:div.timeline-item
     [:div.year "1970s"]
     [:div.description "Low-level socket programming"]]
    [:div.timeline-item
     [:div.year "1990s"]
     [:div.description "Manual UI layout and event handling"]]
    [:div.timeline-item
     [:div.year "2000s"]
     [:div.description "XML"]]
    [:div.timeline-item
     [:div.year "2010s"]
     [:div.description "Boilerplate REST API development"]]
    [:div.timeline-item.highlight
     [:div.year "2020s"]
     [:div.description "Data plumbing"]]
    [:div.timeline-item.future
     [:div.year "Future"]
     [:div.description "?"]]]
   [:small "* Timeline generated by AI, illustrative only"]
   [:aside.notes "Spend about 2 minutes, talk about the rose-tinted view of how programming is getting more interesting.
                  You can have anything you want quickly with AI, as long as you're okay with imperfect"]])

(def valuable-qualities-slides
  [:section
   [:section
    [:h2 "Timeless Qualities"]
    [:aside.notes "Acknowldge worry over automation
                   Overview that we're getting into the things we can do to stay valuable.
                   Learning quickly"]]
   [:section
    [:h3 "Systems Thinking"]
    [:svg.system-diagram {:width "500" :height "500" :viewBox "0 0 600 600"}
     [:defs
      [:marker#arrowhead {:markerWidth "10" :markerHeight "7" 
                          :refX "0" :refY "3.5" :orient "auto"}
       [:polygon {:points "0 0, 10 3.5, 0 7" :fill "#000"}]]]
     [:circle {:cx "300" :cy "100" :r "80" :fill "#e0e0e0" :stroke "#000"}]
     [:text {:x "300" :y "100" :text-anchor "middle" :dominant-baseline "middle"} "Code"]
     [:circle {:cx "100" :cy "500" :r "80" :fill "#e0e0e0" :stroke "#000"}]
     [:text {:x "100" :y "500" :text-anchor "middle" :dominant-baseline "middle"} "Business"]
     [:circle {:cx "500" :cy "500" :r "80" :fill "#e0e0e0" :stroke "#000"}]
     [:text {:x "500" :y "500" :text-anchor "middle" :dominant-baseline "middle"} "Users"]
     [:circle {:cx "300" :cy "300" :r "80" :fill "#e0e0e0" :stroke "#000"}]
     [:text {:x "300" :y "300" :text-anchor "middle" :dominant-baseline "middle"} "Systems"]
     [:line {:x1 "300" :y1 "220" :x2 "300" :y2 "180" :stroke "#000" :marker-end "url(#arrowhead)"}]
     [:line {:x1 "220" :y1 "380" :x2 "180" :y2 "420" :stroke "#000" :marker-end "url(#arrowhead)"}]
     [:line {:x1 "380" :y1 "380" :x2 "420" :y2 "420" :stroke "#000" :marker-end "url(#arrowhead)"}]
     [:line {:x1 "180" :y1 "500" :x2 "420" :y2 "500" :stroke "#000" :marker-end "url(#arrowhead)"}]]
    [:small "* System diagram generated by AI, illustrative only"]
    [:aside.notes "Think high-level, business level, how does everything work together?
                   Do you question every piece of work that comes across your desk?
                   You can have anything you want quickly with AI, as long as you're okay with imperfect"]]
   [:section
    [:h3 "Problem-Solving Beyond Code"]
    [:img {:src "img/code_and_processes.png"
           :width "512" :height "512"}]
    [:aside.notes "Don't be afraid of process change, sometimes a paper-based solution is the right one"]]
   [:section
    [:h3 "Communication and Empathy"]
    [:img {:src "img/cloud_collab.png"
           :width "512" :height "512"}]
    [:aside.notes "Patience in communication and hunger to understand others 
                   Focusing on making your whole team/org better
                   Humility/boldness to ask dumb questions, and to admit ignorance"]]
   [:section
    [:h3 "Adaptability and Quick Learning"]
    [:img {:src "img/hats.png"
           :width "512" :height "512"}]
    [:aside.notes "T-shaped people are all the rage."]]])

;; Consider moving this up so it can have more time
(def practical-applications-slide
  [:section
   [:h2 "Most Direct Skill: "
    [:a {:href "https://youtu.be/r_lW1YRycIk?si=pvtxIncoLQuIJSM9"} "Firefighting"]]
   [:div.before-after
    [:div.before
     [:img {:src "img/firefight-spaghetti.png"
            :width "256" :height "512"}]]
    [:div.after
     [:img {:src "img/firefight-pipes.png"
            :width "256" :height "512"}]]]
   [:aside.note "Many have covered this and it's fit to be its own talk, so I won't go into deep detail. Design your systems well"]])

(def conclusion-slide
  [:section
   [:h2 "Devise"]
   [:p.definition
    [:span.part-of-speech "verb"]
    [:span.pronunciation "/dɪˈvaɪz/"]
    [:span.meaning "To plan or invent (a complex procedure, system, or mechanism) by careful thought"]]
   [:small.author "- Claude 3.5 Sonnet"]
   [:aside.notes "Developers aren't paid to code, they're paid to devise.\nOriginally, this slide was an Alan Kay quote. The google AI gave me an image of Hitler alongside this quote, so do make sure to check your AI partner's work"]])

;; Update the `all` function to include the new slides
(defn all
  "Add here all slides you want to see in your presentation."
  []
  [title-slide
   golden-age-slide
   valuable-qualities-slides
   practical-applications-slide
   conclusion-slide])
